{"version":3,"sources":["Album.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","position","borderWidth","cardMedia","cardContent","flexGrow","cardOverlay","Album","classes","useState","cards","setCards","engine","setEngine","resultCount","setResultCount","oldResultCount","setOldResultCount","inputCards","setInputCards","multiInput","setMultiInput","fetching","setFetching","getSimilar","console","warn","length","formData","FormData","inputCard","aid","append","file","url","xhr","XMLHttpRequest","open","onload","JSON","parse","this","responseText","filter","c","collection","getCollectionInfo","name","send","useEffect","updateFileInputs","files","a","newCards","slice","newCard","key","title","Promise","resolve","reader","FileReader","e","target","result","readAsDataURL","push","Fragment","CssBaseline","DndProvider","backend","HTML5Backend","className","Grid","container","justify","item","xs","InputZone","onFileDrop","f","onURLDrop","u","urls","substring","lastIndexOf","updateURLInputs","onAssetDrop","Object","assign","distance","updateAssetInput","showDropCard","disabled","Form","restoreCount","onResultCountUpdate","onEngineUpdate","forceUpdate","Container","maxWidth","CircularProgress","map","sm","md","ImageCard","useDrop","accept","NativeTypes","FILE","URL","drop","monitor","getItemType","getItem","type","ext","dropCard","ref","id","color","direction","align-items","TextField","label","value","onChange","input","test","onBlur","onKeyPress","parseInt","FormControl","component","FormLabel","RadioGroup","aria-labelledby","FormControlLabel","control","Radio","FormGroup","row","Checkbox","checked","Button","variant","onClick","useDrag","drag","t_color","t_collection_name","ci","t_id","Typography","t_distance","t_title","Card","style","borderColor","href","CardMedia","image","CardContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02b5e48e.chunk.js","sourcesContent":["/* Original content of this file copyright (c) 2014 Call-Em-All, MIT license\n * All changes copyright (c) 2020 Crown Copyright (The National Archives), MIT license\n * For MIT license, see https://github.com/tanc-ahrc/deep-discoveries-interface-building-blocks/blob/master/LICENSE.\n */\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport {useState} from 'react';\nimport {useEffect} from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { useDrop, useDrag, DndProvider } from \"react-dnd\";\nimport { NativeTypes, HTML5Backend } from \"react-dnd-html5-backend\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(4),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    borderWidth: '0.5em'\n  },\n  cardMedia: {\n    paddingTop: '100%'\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardOverlay: {\n    position: 'absolute',\n  },\n}));\n\nexport default function Album() {\n  const classes = useStyles();\n\n  const [cards, setCards] = useState([]);\n  const [engine, setEngine] = useState(\"Style\");\n  const [resultCount, setResultCount] = useState(8);\n  const [oldResultCount, setOldResultCount] = useState(resultCount);\n  const [inputCards, setInputCards] = useState([]);\n  const [multiInput, setMultiInput] = useState(false);\n  const [fetching, setFetching] = useState(false);\n\n\n  const getSimilar = () => {\n    if(fetching) console.warn(\"Nested fetch\");\n    setOldResultCount(resultCount);\n    setCards([]);\n    if(inputCards.length === 0) return;\n    let endpoint = 'https://blockchain.surrey.ac.uk/deepdiscovery/api/upload';\n    let formData = new FormData();\n    for(let inputCard of inputCards) {\n      if(inputCard.aid) formData.append('query_aid', inputCard.aid);\n      else if(inputCard.file) formData.append('query_file', inputCard.file);\n      else if(inputCard.url) formData.append('query_url', inputCard.url);\n    }\n    formData.append('searchengine', engine);\n    formData.append('resultcount', resultCount);\n    let xhr = new XMLHttpRequest();\n    xhr.open('POST', endpoint, true);\n    xhr.onload = function() {\n      const f = (c) => { return c.collection != null && getCollectionInfo(c.collection).name != null; };\n      setCards(JSON.parse(this.responseText).filter(f)); /* Only display images from named collections */\n      setFetching(false);\n    };\n    setFetching(true);\n    xhr.send(formData);\n  }\n\n  const getSimilarEffect = () => { if(!multiInput) getSimilar(); }\n\n  const changeInputMode = () => {\n    if(!multiInput) setInputCards([]);\n  }\n\n  useEffect(getSimilarEffect, [inputCards, engine]);\n  useEffect(changeInputMode, [multiInput]);\n\n  const updateFileInputs = async (files) => {\n    let newCards = multiInput ? inputCards.slice() : [];\n    for(let file of files) {\n      let newCard = {\n        key: newCards.length,\n        file: file,\n        title: file.name,\n      };\n      newCard.url = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = (e) => { resolve(e.target.result); };\n        reader.readAsDataURL(file);\n      });\n      newCards.push(newCard);\n    }\n    setInputCards(newCards);\n  }\n\n  const updateURLInputs = (urls) => {\n    let newCards = multiInput ? inputCards.slice() : [];\n    for(let url of urls) {\n      newCards.push({\n        key: newCards.length,\n        url: url,\n        title: url.substring(url.lastIndexOf('/') + 1),\n      });\n    }\n    setInputCards(newCards);\n  }\n\n  const updateAssetInput = (card) => {\n    let newCards = multiInput ? inputCards.slice() : [];\n    let inputCard = Object.assign({}, card);\n    delete inputCard.distance;\n    inputCard.key = newCards.length;\n    newCards.push(inputCard);\n    setInputCards(newCards);\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <DndProvider backend={HTML5Backend}>\n          <div className={classes.heroContent}>\n            <Grid container spacing={3} justify=\"space-between\">\n              <Grid item xs>\n                <InputZone\n                  onFileDrop={(f) => updateFileInputs(f)}\n                  onURLDrop={(u) => updateURLInputs(u)}\n                  onAssetDrop={(a) => updateAssetInput(a)}\n                  inputCards = {inputCards}\n                  showDropCard = {inputCards.length === 0 || multiInput}\n                  disabled = {fetching}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <Form\n                  className = {classes.heroContent}\n                  restoreCount = {() => {setResultCount(oldResultCount);}}\n                  resultCount  = {resultCount}\n                  onResultCountUpdate = {setResultCount}\n                  engine   = {engine}\n                  onEngineUpdate = {setEngine}\n                  forceUpdate = {getSimilar}\n                  multiInput = {multiInput}\n                  setMultiInput = {setMultiInput}\n                  disabled = {fetching}\n                />\n              </Grid>\n            </Grid>\n          </div>\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            {/* End hero unit */}\n            { fetching ? <CircularProgress/> : null }\n            <Grid container spacing={4}>\n              {cards.map((card) => (\n                <Grid item key={card.aid} xs={6} sm={6} md={3}>\n                  <ImageCard card={card}/>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </DndProvider>\n      </main>\n    </React.Fragment>\n  );\n\n}\n\nfunction InputZone({onFileDrop, onURLDrop, onAssetDrop, inputCards, showDropCard, disabled}) {\n  const [, drop] = useDrop({\n    accept: [NativeTypes.FILE, NativeTypes.URL, 'CARD'],\n    drop: (item, monitor) => {\n      if(monitor.getItemType() === NativeTypes.FILE) {\n        let files = monitor.getItem().files;\n        for(let file of files) {\n          if(file.type !== 'image/jpeg' && file.type !== 'image/png') return;\n        }\n        onFileDrop(files);\n      }\n      else if(monitor.getItemType() === NativeTypes.URL) {\n        let urls = monitor.getItem().urls;\n        for(let url of urls) {\n          let ext = url.substring(url.lastIndexOf('.') + 1);\n          if(ext !== \"jpg\" &&\n             ext !== \"jpeg\" &&\n             ext !== \"png\") return;\n        }\n        onURLDrop(urls);\n      }\n      else onAssetDrop(item.card);\n    },\n  });\n\n  let dropCard = null;\n  if(showDropCard) {\n    dropCard = <Grid item key={-1} xs={6} sm={6} md={3}>\n                 <ImageCard card={{url:'//:0'}}/>\n               </Grid>;\n  }\n\n  return(\n    <div ref={disabled ? null : drop}>\n      <Grid container spacing={4}>\n        {inputCards.map((card) => (\n          <Grid item key={card.key} xs={6} sm={6} md={3}>\n            <ImageCard card={card}/>\n          </Grid>\n        ))}\n        {dropCard}\n      </Grid>\n    </div>\n  );\n}\n\nfunction getCollectionInfo(collection) {\n  if(collection == null) return null; /* matches on undefined or null */\n\n  let c = { id: collection };\n\n  if(collection                 === \"RGBE\") {c.name = \"Royal Botanic Garden Edinburgh\";                c.color = \"darkgreen\";  }\n  else if(collection            === \"MODA\") {c.name = \"The Museum of Domestic Design and Architeture\"; c.color = \"blue\";       }\n  else if(collection.slice(0,3) === \"TNA\")  {c.name = \"The National Archives\";                         c.color = \"gray\";       }\n  else if(collection.slice(0,2) === \"VA\")   {c.name = \"Victoria & Albert Museum\";                      c.color = \"red\";        }\n  else                                      {c.name = null;                                            c.color = \"whitesmoke\"; }\n\n  return c;\n}\n\nfunction Form({resultCount, onResultCountUpdate, restoreCount, engine, onEngineUpdate, forceUpdate, multiInput, setMultiInput, disabled}) {\n  return(\n    <Grid\n      container\n      direction=\"column\"\n      align-items=\"space-between\"\n      spacing={3}\n    >\n      <fieldset disabled={disabled}>\n        <Grid item>\n          <TextField\n            label=\"Results\"\n            name=\"resultCount\"\n            value={resultCount}\n            onChange={e => {\n              let input = e.target.value;\n              if(/^\\d{0,3}$/.test(input)) onResultCountUpdate(input);\n            }}\n            onBlur = {restoreCount}\n            onKeyPress = { (e) => {\n              if(e.key === 'Enter') {\n                if(parseInt(resultCount, 10) === 0 || resultCount === '') restoreCount();\n                else forceUpdate();\n              }\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <FormControl component=\"fieldset\">\n            <FormLabel id=\"engine_legend\" component=\"legend\">Search Engine</FormLabel>\n            <RadioGroup\n              name=\"engine\"\n              value={engine}\n              onChange={e => onEngineUpdate(e.target.value)}\n              aria-labelledby=\"engine_legend\"\n            >\n              <FormControlLabel value=\"Style\" control={<Radio/>} label=\"Style\"/>\n              <FormControlLabel value=\"Semantic\" control={<Radio/>} label=\"Semantic\"/>\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormGroup row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={multiInput}\n                onChange={e => setMultiInput(e.target.checked)}\n              />\n            }\n            label=\"Multiple Inputs\"\n          />\n          <Button variant=\"contained\" disabled={!multiInput} onClick={forceUpdate}>Submit</Button>\n          </FormGroup>\n        </Grid>\n      </fieldset>\n    </Grid>\n  );\n}\n\nfunction ImageCard({card}) {\n  const classes = useStyles();\n\n  const [, drag] = useDrag({\n   item: {\n     type: 'CARD',\n     card: card\n   },\n  });\n\n  let t_color = \"Black\"\n  let t_collection_name = \"\";\n  const ci = getCollectionInfo(card.collection);\n  if(ci !== null) {\n    t_color = ci.color;\n    if(ci.name == null) t_collection_name = ci.id;\n    else t_collection_name = ci.name;\n  }\n\n  let t_id = null;\n  if(card.aid) t_id = <Typography variant=\"caption\">Asset ID: {card.aid}{card.distance ? <br/> : null}</Typography>\n  let t_distance = null;\n  if(card.distance) t_distance = <Typography variant=\"caption\">Distance: {card.distance}</Typography>\n  let t_title = null;\n  if(card.title) t_title = <Typography variant=\"caption\">{card.title}</Typography>\n\n  return(\n    <Card ref={drag} className={classes.card} variant=\"outlined\" style={{borderColor: t_color}}>\n      <a href={card.url}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={card.url}\n          title={card.title}\n        />\n      </a>\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"caption\">\n          <b>{t_collection_name}</b>\n        </Typography>\n        <br/>\n        {t_id}{t_distance}{t_title}\n      </CardContent>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Album from './Album.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <Album/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}